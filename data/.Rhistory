bptest(model)
summary(model)
dwtest(model)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
model = glm(formula = Precio ~ .,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
data.ax = data.ax[-c(153,36,446,59,752),]
model = glm(formula = Precio ~ .Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
model = glm(formula = Precio ~ .Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
data.ax = data.ax[-c(153,36,446,59,752),]
datos.ax = datos.ax[-c(153,36,446,59,752),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
View(datos.ax)
csv2(datos.ax, "data_final.csv")
save.csv2(datos.ax, "data_final.csv")
write.csv2(datos.ax, "data_final.csv")
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidades del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.71707,
scale = 11.40662), lwd = 2, col = "blue")
View(datos.modelo.est)
View(datos.modelo)
View(datos.modelo)
View(datos.modelo)
View(datos.modelo)
library("easypackages")
lib = c("readxl", "sf", "purrr", "goft", "car", "MASS", "lmtest", "devtools", "tidyverse", "fastDummies", "psych", "randtests", "nlme")
easypackages::packages(lib)
datos <- read_excel("data_final.xlsx")
datos[, c(1,4,5,6,7)] = lapply(datos[, c(1,4,5,6,7)], as.factor)
# Estandarización
Z = scale(datos[, c(2,3,8,9)], center = TRUE, scale = TRUE)
datos.est = cbind(Z, datos[, c(1,4,5,6,7)])
library("easypackages")
lib = c("readxl", "sf", "purrr", "goft", "car", "MASS", "lmtest", "devtools", "tidyverse", "fastDummies", "psych", "randtests", "nlme")
easypackages::packages(lib)
datos <- read_excel("data_final5000.xlsx")
datos[, c(1,4,5,6,7)] = lapply(datos[, c(1,4,5,6,7)], as.factor)
# Estandarización
Z = scale(datos[, c(2,3,8,9)], center = TRUE, scale = TRUE)
datos.est = cbind(Z, datos[, c(1,4,5,6,7)])
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
weibull_test(datos$Precio)
f.gamma = fitdist(datos$Precio, "gamma"); f.weibull = fitdist(datos$Precio, "weibull")
f.lnorm = fitdist(datos$Precio, "lnorm")
par(mfrow=c(1,2))
cdfcomp(list(f.gamma, f.weibull, f.lnorm), fitcol = c("blue","green","red"))
qqnorm(datos$Precio)
qqline(datos$Precio)
lnorm_test(datos$Precio)
lnorm_test(datos$Precio[1:5000])
pairs.panels(datos[,c(2,3,8,9)],
smooth = TRUE,
scale = FALSE,
density = TRUE,
ellipses = FALSE,
method = "pearson",
pch = 19,
cor = TRUE,
hist.col = "indianred2",
stars = TRUE, cex.labels = 2.5, cex.cor = 0.35)
par(mfrow = c(2,3))
barplot(table(datos$Marca), col = "indianred2", horiz = TRUE, las = 2)
barplot(table(datos$Color), col = "indianred2", horiz = TRUE, las = 2)
barplot(table(datos$Combustible), col = "indianred2", horiz = TRUE, las = 2)
barplot(table(datos$Transmision), col = "indianred2", horiz = TRUE, las = 2)
barplot(table(datos$Carroceria), col = "indianred2", horiz = TRUE, las = 2)
par(mfrow = c(2,3), echo = FALSE)
boxplot(datos$Precio ~ datos$Marca, col = "indianred2", main = "Precio frente a la marca",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Color, col = "indianred2", main = "Precio frente al color",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Combustible, col = "indianred2", main = "Precio frente al combustible",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Transmision, col = "indianred2", main = "Precio frente a la transmision",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Carroceria, col = "indianred2", main = "Precio frente a la carroceria",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
par(mfrow = c(2,3))
boxplot(datos$Precio ~ datos$Marca, col = "indianred2", main = "Precio frente a la marca",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Color, col = "indianred2", main = "Precio frente al color",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Combustible, col = "indianred2", main = "Precio frente al combustible",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Transmision, col = "indianred2", main = "Precio frente a la transmision",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
boxplot(datos$Precio ~ datos$Carroceria, col = "indianred2", main = "Precio frente a la carroceria",
ylab = " ", xlab = "Precio", horizontal = TRUE, las = 2)
modelo.ols = lm(Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros, datos)
summary(modelo.ols)
res = modelo.ols$residuals
par(mfrow = c(2, 2))
plot(modelo.ols)
shapiro.test(res)
shapiro.test(res)
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
which(datos$Precio > 110)
s = sample(which(datos$Precio > 110), size = 100, replace = FALSE)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
s = sample(which(datos$Precio > 110), size = 150, replace = FALSE)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
s2 = sample(which(datos$Precio > 25 & datos$Precio  < 50), size = 150, replace = FALSE)
s2
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
s2 = sample(which(datos$Precio > 35 & datos$Precio < 50), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
lnorm_test(datos$Precio)
s2 = sample(which(datos$Precio > 25 & datos$Precio < 35), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
s2 = sample(which(datos$Precio > 25 & datos$Precio < 35), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 110), size = 150, replace = FALSE)
s2 = sample(which(datos$Precio > 25 & datos$Precio < 35), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
s = sample(which(datos$Precio > 110), size = 150, replace = FALSE)
s2 = sample(which(datos$Precio > 25 & datos$Precio < 35), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
s2 = sample(which(datos$Precio > 25 & datos$Precio < 35), size = 100, replace = FALSE)
s = c(s,s2)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
s2 = sample(which(datos$Precio > 25 & datos$Precio < 40), size = 100, replace = FALSE)
s = c(s,s2)
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
hist(datos$Precio[-s], freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
5618-450
s = sample(1:5168, size = 4900, replace = FALSE)
datos = datos[s,]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
s2 = sample(which(datos$Precio > 25 & datos$Precio < 40), size = 100, replace = FALSE)
datos = datos[-s2,]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 4.079289,
scale = 13.901938), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio[-s]); gamma_fit(datos$Precio)
modelo.ols = lm(Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros, datos)
summary(modelo.ols)
res = modelo.ols$residuals
par(mfrow = c(2, 2))
plot(modelo.ols)
shapiro.test(res)
bptest(modelo.ols)
dwtest(modelo.ols)
write.csv2(datos, "data_final.csv")
# FUNCION DE ENLACE LOG
## Precio ~ Carroceria + Antiguedad + Marca + Motor + Kilometros + Combustible + Transmision + Color
options(scipen=1)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos)
bptest(model)
summary(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
which(model$residuals > 1.1)
datos.ax = datos[-c(16,  234,  391,  410, 2517, 2622, 4221, 4441, 4557, 4576, 4711),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos)
which(model$residuals > 1)
datos.ax = datos[-c(16,  234,  391,  410, 1992, 2517, 2622, 3147, 3804, 3841, 4221, 4441, 4557, 4576, 4711),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
datos.ax = datos[-c(16,  234,  391,  410, 1992, 2517, 2622, 3147, 3804, 3841, 4221, 4441, 4557, 4576, 4711, 1137, 1584, 3687),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos)
plot(model$fitted.values, model$residuals, pch= 19)
which(model$residuals > 0.9)
datos.ax = datos[-c(16,  115,  234,  391, 410,  552, 1992, 2517, 2622, 3147, 3653, 3804, 3841, 4221, 4441, 4557, 4576, 4711),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
plot(model$fitted.values, model$residuals, pch= 19)
options(scipen=1)
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
datos.ax = datos[-c(8,16,  115,  234,  391, 410,  552, 1992, 2517, 2622, 3147, 3653, 3804, 3841, 4221, 4441, 4557, 4576, 4711),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
summary(model)
dwtest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
which(model$residuals > 0.9)
datos.ax = datos.ax[-c(193, 1134, 1581, 2140, 2218, 3341, 3483, 3523, 3683, 3760, 3768, 4659),]
model = glm(formula = Precio ~ Marca + Antiguedad + Color + Combustible + Transmision + Carroceria + Motor + Kilometros,
family  = Gamma(link = "log"), data = datos.ax)
bptest(model)
plot(model$fitted.values, model$residuals, pch= 19)
text(model$fitted.values, model$residuals, labels = 1:length(model$fitted.values), cex = 0.5, pos = 3)
write.csv2(datos.ax, "data_final.csv")
write.csv2(datos.ax, "data_final.csv")
library("easypackages")
lib = c("readxl", "sf", "purrr", "goft", "car", "MASS", "lmtest", "devtools", "tidyverse", "fastDummies", "psych", "randtests", "nlme")
easypackages::packages(lib)
datos <- read_excel("data_final.xlsx")
datos[, c(1,4,5,6,7)] = lapply(datos[, c(1,4,5,6,7)], as.factor)
# Estandarización
Z = scale(datos[, c(2,3,8,9)], center = TRUE, scale = TRUE)
datos.est = cbind(Z, datos[, c(1,4,5,6,7)])
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
datos = datos.ax
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 120), size = 100, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 80 & atos$Precio < 120), size = 100, replace = F)
datos = datos[-s, ]
s = sample(which(datos$Precio > 80 & datos$Precio < 120), size = 100, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
library("easypackages")
lib = c("readxl", "sf", "purrr", "goft", "car", "MASS", "lmtest", "devtools", "tidyverse", "fastDummies", "psych", "randtests", "nlme")
easypackages::packages(lib)
datos <- read_excel("data_final.xlsx")
datos[, c(1,4,5,6,7)] = lapply(datos[, c(1,4,5,6,7)], as.factor)
# Estandarización
Z = scale(datos[, c(2,3,8,9)], center = TRUE, scale = TRUE)
datos.est = cbind(Z, datos[, c(1,4,5,6,7)])
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
datos = datos.ax
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
s = sample(which(datos$Precio > 120), size = 100, replace = F)
s2 = sample(which(datos$Precio > 80 & datos$Precio < 120), size = 100, replace = F)
s = c(s,s2)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s2 = sample(which(datos$Precio > 100 & datos$Precio < 120), size = 100, replace = F)
s = c(s,s2)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
a = datos
s = sample(which(datos$Precio > 120), size = 100, replace = F)
s = sample(which(datos$Precio > 120), size = 20, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
s
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 110), size = 50, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
a = datos
s = sample(which(datos$Precio > 110), size = 50, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
datos = a
s = sample(which(datos$Precio > 110), size = 10, replace = F)
datos = datos[-s, ]
hist(datos$Precio, freq = FALSE, col = "indianred2", main = "Distribución de densidad del precio",
xlab = "Precio", ylab = "Densidad", breaks = 20, xlim = c(0,150))
x = seq(0, 600, 0.1)
lines(x, dgamma(x, shape = 6.3641731,
rate = 0.1262162), lwd = 2, col = "blue")
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 110), size = 10, replace = F)
datos = datos[-s, ]
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
s = sample(which(datos$Precio > 110), size = 10, replace = F)
datos = datos[-s, ]
# Bondad de ajuste
gamma_test(datos$Precio); gamma_fit(datos$Precio)
write.csv2(datos, "data_final.csv")
qt(0.95, 27)
qf(0.95, 20, 15)
qf(0.95, 15, 20)
qf(0.95, 15, 20)
qf(0.95, 20, 15)
qf(0.95, 9, 14)
qf(0.05, 9, 14)
qf(0.95, 15, 20)
4.5^2/2.5 ^2
setwd("G:\\Mi unidad\\Maestria en CD\\Unidad2EST2\data")
setwd("G:\\Mi unidad\\Maestria en CD\\Unidad2EST2\data")
setwd("G:\\Mi unidad\\Maestria en CD\\Unidad2EST2\data")
setwd("G:\\Mi unidad\\Maestria en CD\\Unidad2EST2\data")
setwd("G:\\Mi unidad\\Maestria en CD\\Unidad2EST2\\data")
read("laboral.rda")
load("laboral.rda")
View(laboral)
load("ventas.rda")
View(ventas)
load("casas.rda")
View(casas)
load("creditos.rda")
View(creditos)
plot(creditos)
plot(creditos)
plot(creditos)
plot(creditos)
plot(creditos)
colnames(creditos)
plot(creditos)
modelo = glm(DEFAULT ~ ANTIUEDAD + EDAD + CUOTA_TOTAL + INGRESOS,family=binomial(link="logit"), data= creditos)
summary(modelo)
